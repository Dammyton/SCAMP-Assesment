{"remainingRequest":"/home/dammyton/Work/vuejs-tech-ass/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dammyton/Work/vuejs-tech-ass/src/components/country-stats.vue?vue&type=style&index=0&id=63ca0170&lang=css&scoped=true&","dependencies":[{"path":"/home/dammyton/Work/vuejs-tech-ass/src/components/country-stats.vue","mtime":1587597098230},{"path":"/home/dammyton/Work/vuejs-tech-ass/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dammyton/Work/vuejs-tech-ass/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dammyton/Work/vuejs-tech-ass/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dammyton/Work/vuejs-tech-ass/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dammyton/Work/vuejs-tech-ass/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRlbW8gewogIHBhZGRpbmc6IDUwcHg7CiAgcGFkZGluZy10b3A6IDBweDsKICBtYXJnaW4tdG9wOiAwcHg7Cn0KYnV0dG9uLmFjdGlvbnMgewogIG1hcmdpbjogM3B4Owp9CmgzIHsKICBtYXJnaW4tdG9wOiA1MHB4Owp9Ci5jYXJkLWJvZHkgewogIGJveC1zaGFkb3c6IDAgMXB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4wOCksCiAgICAwIDVweCAyNnB4IDAgcmdiYSg2NywgOTQsIDEzMSwgMC4xNSk7Cn0K"},{"version":3,"sources":["country-stats.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"country-stats.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"demo\">\n    <div class=\"container\">\n      <div class=\"mt-5\">\n        <b-card-group deck>\n          <b-card\n            bg-variant=\"default\"\n            border-variant=\"light\"\n            header-bg-variant=\"secondary\"\n            header-text-variant=\"white\"\n            header=\"Country Statistics\"\n            class=\"left\"\n          >\n            <b-row>\n              <b-col sm=\"5\" md=\"5\" class=\"mb-3\">\n                <b-input-group size=\"sm\">\n                  <b-form-input\n                    v-model=\"filter\"\n                    type=\"search\"\n                    id=\"filterInput\"\n                    placeholder=\"Type to Search\"\n                  ></b-form-input>\n                  <b-input-group-append>\n                    <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\n                  </b-input-group-append>\n                </b-input-group>\n              </b-col>\n              <b-col sm=\"2\" md=\"3\" class=\"my-1\">\n                <!-- Space between -->\n              </b-col>\n              <b-col sm=\"5\" md=\"4\" class=\"my-1\">\n                <b-form-group\n                  label=\"Per page\"\n                  label-cols-sm=\"3\"\n                  label-cols-md=\"3\"\n                  label-cols-lg=\"3\"\n                  label-align-sm=\"right\"\n                  label-size=\"sm\"\n                  label-for=\"perPageSelect\"\n                  class=\"mb-3\"\n                >\n                  <b-form-select\n                    v-model=\"perPage\"\n                    id=\"perPageSelect\"\n                    size=\"sm\"\n                    :options=\"pageOptions\"\n                  ></b-form-select>\n                </b-form-group>\n              </b-col>\n            </b-row>\n\n            <b-table\n              striped\n              hover\n              show-empty\n              small\n              stacked=\"md\"\n              :current-page=\"currentPage\"\n              :per-page=\"perPage\"\n              :filter=\"filter\"\n              :filterIncludedFields=\"filterOn\"\n              :sort-by.sync=\"sortBy\"\n              :sort-desc.sync=\"sortDesc\"\n              :sort-direction=\"sortDirection\"\n              @filtered=\"onFiltered\"\n              caption-top\n              :items=\"items\"\n              :fields=\"fields\"\n            >\n              <template v-slot:table-caption>Statistics</template>\n\n              <template v-slot:cell(index)=\"row\">\n                <span>{{row.index + 1}}</span>\n              </template>\n            </b-table>\n            <b-col sm=\"12\" md=\"12\" class=\"my-1\">\n              <b-pagination\n                v-model=\"currentPage\"\n                :total-rows=\"totalRows\"\n                :per-page=\"perPage\"\n                align=\"right\"\n                size=\"md\"\n                class=\"my-0\"\n              ></b-pagination>\n            </b-col>\n          </b-card>\n        </b-card-group>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"mhtable\",\n  data() {\n    return {\n      items: [],\n      fields: [\n        { key: \"index\", label: `S/N`, sortable: true },\n        {\n          key: \"country\",\n          label: `Country`,\n          sortable: true,\n          sortDirection: \"desc\"\n        },\n        {\n          key: \"cases.active\",\n          label: `Total Cases`,\n          sortable: true,\n          sortByFormatted: true,\n          filterByFormatted: true\n        },\n        {\n          key: \"deaths.total\",\n          label: \"Total Deaths\",\n          sortable: true\n        },\n\n        {\n          key: \"cases.recovered\",\n          label: \"Total Recoveries\",\n          sortable: true\n        }\n      ],\n      totalRows: 1,\n      currentPage: 1,\n      perPage: 10,\n      pageOptions: [5, 10, 15],\n      sortBy: \"\",\n      sortDesc: false,\n      sortDirection: \"asc\",\n      filter: null,\n      filterOn: []\n    };\n  },\n  created() {\n    axios({\n      method: \"GET\",\n      url: \"https://covid-193.p.rapidapi.com/statistics\",\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"d7271e3630msha1c735b8bc98060p186254jsn8723f1471308\"\n      }\n    })\n      .then(response => {\n        console.log(response.data.response, \"fd\");\n        this.items = response.data.response;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  },\n  methods: {\n    info(item, index, button) {\n      this.infoModal.title = `Row index: ${index}`;\n      this.infoModal.content = JSON.stringify(item, null, 2);\n      this.$root.$emit(\"bv::show::modal\", this.infoModal.id, button);\n    },\n    resetInfoModal() {\n      this.infoModal.title = \"\";\n      this.infoModal.content = \"\";\n    },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    }\n  },\n  computed: {\n    sortOptions() {\n      // Create an options list from our fields\n      return this.fields\n        .filter(f => f.sortable)\n        .map(f => {\n          return { text: f.label, value: f.key };\n        });\n    }\n  },\n  mounted() {\n    // Set the initial number of items\n    this.totalRows = this.items.length;\n  }\n};\n</script>\n<style lang=\"css\" scoped>\n.demo {\n  padding: 50px;\n  padding-top: 0px;\n  margin-top: 0px;\n}\nbutton.actions {\n  margin: 3px;\n}\nh3 {\n  margin-top: 50px;\n}\n.card-body {\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.08),\n    0 5px 26px 0 rgba(67, 94, 131, 0.15);\n}\n</style>"]}]}